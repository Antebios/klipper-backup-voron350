[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    ;STATUS_HOMING
    ;G28
    ;STATUS_LEVELING
    ;QUAD_GANTRY_LEVEL
    ;STATUS_HOMING
    ;G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #G0 X232 Y350 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    STATUS_PRINTING
    ;G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    ;BED_MESH_PROFILE LOAD=110_smooth ; load bed mesh profile '110_smooth'
    #CALIBRATE_Z

[gcode_macro PRE_PRINT_CALIBRATE]
#   Use PRINT_START for the slicer starting script
gcode:
  STATUS_LEVELING
  BED_MESH_CLEAR
  G90 #set absolute positioning
  M107 #turn off parts fan
  G28 #home all axis
  CLEAN_NOZZLE
  ;Attach_Probe_Lock #prevent probe docking until unlocked, from klicky 
  QUAD_GANTRY_LEVEL #V2.4
  ;Dock_Probe_Unlock #removes probe lock
  CLEAN_NOZZLE #requires brush/purge bucket, from decontaminator
  G28 Z #rehome Z axis 
  # CALIBRATE_Z #automatic Z offset, from klipper z calibration
  #BED_MESH_PROFILE LOAD=default #load saved mesh *or*
  BED_MESH_CALIBRATE #generate new mesh
  STATUS_LIGHTS_OFF
  STATUS_READY

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder]
    G1 E-5 F1800                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    CLEAN_NOZZLE #requires brush/purge bucket, from decontaminator
    G0  X350 Y356 F3600            ; park nozzle at rear
    #BED_MESH_CLEAR
    STATUS_LIGHTS_OFF
    STATUS_GREEN
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[gcode_macro CIRCULATE_AIR_START]
gcode:
    G90                                   ; absolute positioning
    G0  X175 Y175 Z40 F3600               ; Move carriage to the center 
    M106 S255                             ; Turn on Hotend Fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0 ; Turn off Exhaust Fan
[gcode_macro CIRCULATE_AIR_END]
gcode:
    M106 S0                               ; Turn off Hotend Fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0 ; Turn off Exhaust Fan
    G90                                   ; absolute positioning
    G0  X350 Y356 F3600                   ; Park the carriage

[gcode_macro VENT_AIR_START]
gcode:
    TURN_OFF_HEATERS
    G90                                   ; absolute positioning
    G0  X175 Y175 Z100 F3600              ; Move carriage to the center 
    M106 S255                             ; Turn on Hotend Fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1 ; Turn on Exhaust Fan
[gcode_macro VENT_AIR_END]
gcode:
    TURN_OFF_HEATERS
    M106 S0                               ; Turn off Hotend Fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0 ; Turn off Exhaust Fan
    G90                                   ; absolute positioning
    G0  X350 Y356 F3600                   ; Park the carriage



[gcode_macro PARK_TOOLHEAD]
gcode:
    G90                                   ; absolute positioning
    G0  X175 Y50 Z60 F3600                   ; Park the carriage

# Park front center
[gcode_macro PARKFRONT]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park front center
[gcode_macro PARK_BACKCORNER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKBACKCORNER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} Z{printer.toolhead.axis_maximum.z/4} F6000        
    RESTORE_GCODE_STATE NAME=PARKBACKCORNER



[gcode_macro FULL_QGL]
gcode:
  STATUS_LEVELING
  BED_MESH_CLEAR
  G90 #set absolute positioning
  M107 #turn off parts fan
  G28 #home all axis
  CLEAN_NOZZLE
  ;Attach_Probe_Lock #prevent probe docking until unlocked, from klicky 
  QUAD_GANTRY_LEVEL #V2.4
  ;Dock_Probe_Unlock #removes probe lock
  #CLEAN_NOZZLE #requires brush/purge bucket, from decontaminator
  G28 Z #rehome Z axis


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0                                    ; disable filament sensor
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1                            ; enable filament sensor
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1                           ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT


[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause


[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0


